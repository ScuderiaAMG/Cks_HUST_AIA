/*******************************mouse.c**************************/
#include <conio.h>
#include <graphics.h>
#include <dos.h>
#include <stdio.h>
#include <stdlib.h>
#include "mouse.h"

/**************************
MOUSE.c
UPDATER: dengshuumin
FUNCTION: mouse action
ABSTRACT:
		A.mread
		B.newmouse
VERSION: 3.0
***************************/
int MouseX;
int MouseY;
int MouseS;
int press;
void *buffer;
union REGS regs;
int flag = 0;

void mouseinit() //鍒濆鍖?
{
	int retcode;
	int xmin, xmax, ymin, ymax, x_max = 625, y_max = 480;
	int size;

	xmin = 2;
	xmax = x_max - 1;
	ymin = 8;
	ymax = y_max - 2;
	regs.x.ax = 0;
	int86(51, &regs, &regs);
	retcode = regs.x.ax;
	if (retcode == 0)
	{
		;
		//printf("Mouse or Mouse Driver Obsent,Please Install!");
		//delay(5000);
	}
	else
	{
		regs.x.ax = 7;
		regs.x.cx = xmin;
		regs.x.dx = xmax;
		int86(51, &regs, &regs);
		regs.x.ax = 8;
		regs.x.cx = ymin;
		regs.x.dx = ymax;
		int86(51, &regs, &regs);
	}
	MouseS = 0;
	MouseX = 320, MouseY = 240;
	save_bk_mou(320, 240);
	mouse(MouseX, MouseY);
	flag = 1;
}

/*****************************
FUNCTION: mouse
DESCRIPTION: 鐢讳笉鍚屽舰鎬佺殑榧犳爣
INPUT: x,y
RETURN: 鏃?
******************************/
void mouse(int x, int y)
{

	switch (MouseS)
	{
	case 1: //鎵嬪娍榧犳爣
	{
		setcolor(WHITE);
		setlinestyle(0, 0, 1);
		line(x - 1, y + 9, x - 1, y + 8);
		line(x, y + 7, x, y + 11);
		line(x + 1, y + 6, x + 1, y + 13);
		line(x + 2, y + 8, x + 2, y + 14);
		line(x + 3, y - 1, x + 3, y + 15);
		arc(x + 4, y - 1, 0, 180, 1);
		line(x + 4, y - 2, x + 4, y + 15);
		line(x + 5, y - 1, x + 5, y + 16);
		arc(x + 6, y + 3, 0, 180, 1);
		line(x + 6, y + 2, x + 6, y + 16);
		line(x + 7, y + 3, x + 7, y + 17);
		arc(x + 8, y + 5, 0, 180, 1);
		line(x + 8, y + 4, x + 8, y + 17);
		line(x + 9, y + 5, x + 9, y + 16);
		arc(x + 10, y + 7, 0, 180, 1);
		line(x + 10, y + 6, x + 10, y + 16);
		line(x + 11, y + 7, x + 11, y + 13);

		setcolor(DARKGRAY);
		line(x - 1, y + 9, x - 1, y + 8);
		line(x - 1, y + 8, x + 1, y + 6);
		line(x + 1, y + 6, x + 3, y + 10);
		line(x + 3, y + 10, x + 3, y - 1);
		arc(x + 4, y - 1, 0, 180, 1);
		line(x + 5, y - 1, x + 5, y + 5);
		arc(x + 6, y + 3, 0, 180, 1);
		line(x + 7, y + 3, x + 7, y + 7);
		arc(x + 8, y + 5, 0, 180, 1);
		line(x + 9, y + 5, x + 9, y + 9);
		arc(x + 10, y + 7, 0, 180, 1);
		line(x + 11, y + 7, x + 11, y + 13);
		arc(x + 7, y + 13, -90, 0, 4);
		line(x + 7, y + 17, x + 3, y + 15);
		line(x + 3, y + 15, x + 1, y + 13);
		line(x + 1, y + 13, x - 1, y + 9);
	}
	break;
	case 2: //鍏夋爣
	{
		setcolor(DARKGRAY);
		setlinestyle(0, 0, 1);
		line(x + 1, y - 1, x + 9, y - 1);
		line(x + 1, y + 15, x + 9, y + 15);
		line(x + 5, y - 1, x + 5, y + 15);
	}
	break;
	case 3: //鍗佸瓧
	{
		setcolor(WHITE);
		setlinestyle(0, 0, 1);
		line(x - 1, y + 7, x + 11, y + 7);
		line(x + 5, y - 1, x + 5, y + 15);
	}
	break;
	case 4://閾呯瑪
	{
		setcolor(LIGHTGRAY);
    	setlinestyle(0,0,1);
    	line(x-1,y-2,x+2,y-2);
    	line(x-1,y-1,x+1,y-1);
    	line(x-1,y,x,y);
    	putpixel(x-1,y+1,LIGHTGRAY);

		setcolor(BROWN);
		setlinestyle(0,0,1);
		line(x+2,y-1,x+3,y-1);
		line(x+1,y,x+4,y);
		line(x,y+1,x+5,y+1);
		line(x,y+2,x+6,y+2);
		line(x+1,y+3,x+7,y+3);
		line(x+2,y+4,x+8,y+4);
		line(x+3,y+5,x+9,y+5);
		line(x+4,y+6,x+9,y+6);
		line(x+5,y+7,x+8,y+7);
		line(x+6,y+8,x+7,y+8);

		putpixel(x+10,y+6,LIGHTGRAY);
		setcolor(LIGHTGRAY);
		setlinestyle(0,0,1);
		line(x+9,y+7,x+11,y+7);
		line(x+8,y+8,x+11,y+8);
		line(x+7,y+9,x+10,y+9);
		line(x+8,y+10,x+9,y+10);
	}
	break;
	case 5: //姗＄毊
	{
		putpixel(x+3,y-2,LIGHTGRAY);
		setlinestyle(0,0,1);
		setcolor(LIGHTGRAY);
		line(x+2,y-1,x+4,y-1);
		line(x+1,y,x+5,y);
		line(x,y+1,x+6,y+1);
		line(x-1,y+2,x+7,y+2);
		line(x,y+3,x+8,y+3);
		line(x+1,y+4,x+9,y+4);
		line(x+2,y+5,x+10,y+5);
		line(x+3,y+6,x+11,y+6);
		line(x+4,y+7,x+10,y+7);
		line(x+5,y+8,x+9,y+8);
		line(x+6,y+9,x+8,y+9);
		putpixel(x+7,y+10,LIGHTGRAY);
	}
	break;

	case 6 : //鏍戣嫍
	{
		setcolor(GREEN);
		setlinestyle(SOLID_LINE,0,NORM_WIDTH);
		line(x-1,y-2,x,y-2);
		line(x-1,y-1,x+1,y-1);
		line(x-1,y,x+2,y);
		line(x,y+1,x+6,y+1);
		line(x+1,y+2,x+5,y+2);
		line(x+3,y+2,x+3,y+6);

		line(x+6,y-2,x+7,y-2);
		line(x+5,y-1,x+7,y-1);
		line(x+4,y,x+7,y);

	}
	break;

	case 7 : //閾插瓙
	{
		setcolor(LIGHTGRAY);
		setlinestyle(SOLID_LINE,0,NORM_WIDTH);
		line(x-1,y-2,x+2,y-2);
		line(x-1,y-1,x+3,y-1);
		line(x-1,y,x+4,y);
		line(x-1,y+1,x+3,y+1);
		line(x,y+2,x+2,y+2);
		putpixel(x+1,y+3,LIGHTGRAY);

		setcolor(BROWN);
		line(x+3,y+2,x+4,y+2);

		line(x+3,y+3,x+5,y+3);//x-1 y-2
		line(x+4,y+4,x+6,y+4);
		line(x+5,y+5,x+7,y+5);
		line(x+6,y+6,x+8,y+6);
		line(x+7,y+7,x+9,y+7);

		line(x+8,y+8,x+11,y+8);
		line(x+9,y+9,x+10,y+9);
		line(x+8,y+10,x+9,y+10);
		putpixel(x+11,y+7,BROWN);
	}
	break;

	case 8 : //鏃楀瓙
	{
		setcolor(LIGHTGRAY);
		setlinestyle(SOLID_LINE,0,NORM_WIDTH);
		line(x+4,y,x+4,y+13);
		line(x+5,y,x+5,y+13);
		line(x+2,y+14,x+8,y+14);
		line(x,y+15,x+10,y+15);
		line(x,y+16,x+10,y+16);

		setcolor(RED);
		line(x+6,y,x+6,y+6);
		line(x+7,y+1,x+7,y+6);
		line(x+8,y+2,x+8,y+6);
		line(x+9,y+3,x+9,y+6);
		line(x+10,y+4,x+10,y+6);
		line(x+11,y+5,x+11,y+6);
	}
	break;

	case 9: //姘?
	{
		setcolor(BLUE);
		setlinestyle(SOLID_LINE,0,NORM_WIDTH);
		putpixel(x+3,y+0,BLUE);
		line(x+2,y+1,x+4,y+1);
		line(x+2,y+2,x+4,y+2);
		line(x+1,y+3,x+5,y+3);
		line(x+1,y+4,x+5,y+4);
		line(x,y+5,x+6,y+5);
		line(x,y+6,x+6,y+6);
		line(x,y+7,x+6,y+7);
		line(x+1,y+8,x+5,y+8);
		line(x+2,y+9,x+4,y+9);
	}
	break;

	default: //榛樿榧犳爣
	{
		setlinestyle(0, 0, 1);
		setcolor(WHITE);
		line(x, y, x, y + 13);
		line(x + 1, y + 1, x + 1, y + 12);
		line(x + 2, y + 2, x + 2, y + 11);
		line(x + 3, y + 3, x + 3, y + 10);
		line(x + 4, y + 4, x + 4, y + 12);
		line(x + 5, y + 5, x + 5, y + 9);
		line(x + 5, y + 11, x + 5, y + 14);
		line(x + 6, y + 6, x + 6, y + 9);
		line(x + 6, y + 13, x + 6, y + 15);
		line(x + 7, y + 7, x + 7, y + 9);
		line(x + 8, y + 8, x + 8, y + 9);
		line(x + 9, y + 9, x + 9, y + 9);
		setcolor(DARKGRAY);
		line(x - 1, y - 1, x - 1, y + 14);
		line(x - 1, y + 14, x + 3, y + 11);
		line(x + 3, y + 11, x + 3, y + 12);
		line(x + 3, y + 12, x + 4, y + 13);
		line(x + 4, y + 13, x + 4, y + 14);
		line(x + 4, y + 14, x + 7, y + 17);
		line(x + 7, y + 17, x + 7, y + 13);
		line(x + 7, y + 13, x + 6, y + 12);
		line(x + 6, y + 12, x + 6, y + 11);
		line(x + 6, y + 11, x + 5, y + 10);
		line(x + 5, y + 10, x + 11, y + 10);
		line(x + 11, y + 10, x - 1, y - 2);
	}
	break;
	}
}

/*void mou_pos(int *nx,int *ny,int*nbuttons)//鏇存敼榧犳爣浣嶇疆
{
	int x0=*nx,y0=*ny;

	mread(nx,ny,nbuttons);
	clrmous(x0,y0);
	save_bk_mou(*nx,*ny);
	drawmous(*nx,*ny);
}

void mread(int *nx,int *ny,int*nbuttons)//鏀瑰潗鏍囦笉鐢?
{
	int x0=*nx,y0=*ny,buttons0=*nbuttons;
	int xnew,ynew,buttonsnew;

	do{
	regs.x.ax=3;
	int86(51,&regs,&regs);
	buttonsnew=regs.x.bx;
	delay(10);
	regs.x.ax=3;
	int86(51,&regs,&regs);
	if(regs.x.bx==buttonsnew)
		*nbuttons=regs.x.bx;
	else
		*nbuttons=buttons0;
	xnew=regs.x.cx;
	ynew=regs.x.dx;
	}while(xnew==x0&&ynew==y0&&*nbuttons==0);
	*nx=xnew;
	*ny=ynew;
}
*/

/***************************************
FUNCTION: mread
DESCRIPTION: 鑾峰彇鏂扮殑瀵勫瓨鍣ㄤ俊鎭?
INPUT: nx,ny,nbuttons
RETURN: 鏃?
****************************************/
void mread(int *nx, int *ny, int *nbuttons)
{
	regs.x.ax = 3;
	int86(51, &regs, &regs);
	*nx = regs.x.cx;
	*ny = regs.x.dx;
	*nbuttons = regs.x.bx;
}

/*******************************************
FUNCTION: newmouse
DESCRIPTION: 榧犳爣鐘舵€佸彂鐢熷彉鍖栧垯鏇存柊榧犳爣
INPUT: nx,ny,nbuttons
RETURN: 鏃?
********************************************/

void newmouse(int *nx, int *ny, int *nbuttons)
{
	int xn, yn, buttonsn;
	int x0 = *nx, y0 = *ny, buttons0 = *nbuttons;
	mread(&xn, &yn, &buttonsn);
	*nx = xn;
	*ny = yn;
	*nbuttons = buttonsn;
	if (buttons0 == *nbuttons)
		*nbuttons = 0; //浣垮緱鑳借繛缁寜閿?
	if (xn == x0 && yn == y0 && buttonsn == buttons0)
		return;		 	//榧犳爣鐘舵€佷笉鍙樺垯鐩存帴杩斿洖S
	clrmous(x0, y0); 	//璇存槑榧犳爣鐘舵€佸彂鐢熶簡鏀瑰彉
	save_bk_mou(*nx, *ny);
	drawmous(*nx, *ny);
}

void save_bk_mou(int nx, int ny) //瀛橀紶鏍囪儗鏅?
{
	int size;

	size = imagesize(nx - 1, ny - 2, nx + 11, ny + 17);
	buffer = malloc(size);
	if (buffer != NULL)
		getimage(nx - 1, ny - 2, nx + 11, ny + 17, buffer);
	// else
		//printf("Error");
}

void clrmous(int nx, int ny) //娓呴櫎榧犳爣
{
	if (flag == 1)
	{
		setwritemode(XOR_PUT);
		mouse(nx, ny);
		putimage(nx - 1, ny - 2, buffer, COPY_PUT);
		free(buffer);
		flag = 0;
		setwritemode(COPY_PUT);
	}
}

void drawmous(int nx, int ny)
{
	if (flag == 0)
	{
		setwritemode(COPY_PUT);
		mouse(nx, ny);
		flag = 1;
	}
}

//濡傛灉鍦ㄦ涓偣鍑伙紝鍒欒繑鍥?1锛涘湪妗嗕腑鏈偣鍑伙紝鍒欒繑鍥?2锛涗笉鍦ㄦ涓垯杩斿洖0
int mouse_press(int x1, int y1, int x2, int y2)
{
	//鍦ㄦ涓偣鍑伙紝鍒欒繑鍥?1
	if (MouseX > x1 && MouseX < x2 && MouseY > y1 && MouseY < y2 && press == 1)
	{
		return 1;
	}

	//鍦ㄦ涓湭鐐瑰嚮锛屽垯杩斿洖2
	else if (MouseX > x1 && MouseX < x2 && MouseY > y1 && MouseY < y2 && press == 0)
	{
		return 2;
	}

	//鍦ㄦ涓偣鍑诲彸閿紝鍒欒繑鍥?3
	else if (MouseX > x1 && MouseX < x2 && MouseY > y1 && MouseY < y2 && press == 2)
	{
		return 3;
	}

	else
	{
		return 0;
	}
}
/****************************************mouse.h*******************************************/
#ifndef _MOUSE_H_
#define _MOUSE_H_

int mouse_press(int x1, int y1, int x2, int y2);//如果在框中点击，则返回1；在框中未点击，则返回2；不在框中则返回0
void mouse(int,int);//设计鼠标
void mouseinit(void);//初始化
//void mou_pos(int*,int*,int*);//更改鼠标位置
void mread(int *,int *,int*);//改坐标不画
void save_bk_mou(int x,int y);//存鼠标背景
void clrmous(int x,int y);//清除鼠标
void drawmous(int x,int y);//画鼠标
void newmouse(int *nx,int *ny,int *nbuttons);   //更新鼠标

extern int MouseX;
extern int MouseY;
extern int MouseS;
extern int press;
extern union REGS regs;

#endif
